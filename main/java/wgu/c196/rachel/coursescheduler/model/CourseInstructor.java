package wgu.c196.rachel.coursescheduler.model;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;

/**
 * Class for a course instructor.
 *
 * <p> This class defines a course instructor that will be teaching a Course. It contains
 * information on the name, phone number, and email address of the course instructor. </p>
 */
@Entity(tableName = "course_instructor_table")
public class CourseInstructor {

    @PrimaryKey(autoGenerate = true)
    private int id;

    private String name;

    @ColumnInfo(name = "phone_number")
    private String phoneNumber;

    private String email;

    /**
     * Default constructor for CourseInstructor.
     */
    public CourseInstructor() {
    }

    /**
     * Constructor for CourseInstructor.
     *
     * @param name The name of the course instructor
     * @param phoneNumber The phone number of the course instructor
     * @param email The email address of the course instructor
     */
    public CourseInstructor(String name, String phoneNumber, String email) {
        this.name = name;
        this.phoneNumber = phoneNumber;
        this.email = email;
    }

    /**
     * Constructor for CourseInstructor.
     *
     * @param id The id of the course instructor. Cannot be null.
     * @param name The name of the course instructor
     * @param phoneNumber The phone number of the course instructor
     * @param email The email address of the course instructor
     */
    public CourseInstructor(@NonNull int id, String name, String phoneNumber, String email) {
        this.id = id;
        this.name = name;
        this.phoneNumber = phoneNumber;
        this.email = email;
    }

    /**
     * Getter for ID.
     *
     * <p> This is the getter for the ID of a course instructor. An ID is autogenerated by the database. </p>
     * @return The ID of the course instructor
     */
    public int getId() {
        return id;
    }

    /**
     * Setter for ID.
     *
     * <p> This is the setter for the ID of a course instructor. An ID is autogenerated by the database. </p>
     * @param id The ID the course instructor will have.
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for name.
     *
     * <p> This is the getter for the name of the course instructor. </p>
     * @return The name of the course instructor
     */
    public String getName() {
        return name;
    }

    /**
     * Setter for name.
     *
     * <p> This is the setter for the name of the course instructor. </p>
     * @param name The name the course instructor will have
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for phone number.
     *
     * <p> This is the getter for the phone number of the course instructor. </p>
     * @return The phone number of the course instructor
     */
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Setter for phone number.
     *
     * <p> This is the setter for the phone number of the course instructor. </p>
     * @param phoneNumber The phone number the course instructor will have
     */
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    /**
     * Getter for email.
     *
     * <p> This is the getter for the email address of the course instructor. </p>
     * @return The email address of the course instructor
     */
    public String getEmail() {
        return email;
    }

    /**
     * Setter for email.
     *
     * <p> This is the setter for the email address of the course instructor. </p>
     * @param email The email address the course instructor will have
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Overrides the toString() method.
     *
     * @return A formatted String containing the course instructor's name
     */
    @Override
    public String toString() {
        return name;
    }

    /**
     * Overrides the equals() method.
     *
     * @param obj The object to be comopared to
     * @return Returns true if obj is a CourseInstructor and has the same id
     */
    @Override
    public boolean equals(@Nullable Object obj) {
        if (obj instanceof CourseInstructor)
            return (id == ((CourseInstructor) obj).getId());
        else
            return false;
    }
}
