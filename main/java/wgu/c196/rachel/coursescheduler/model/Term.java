package wgu.c196.rachel.coursescheduler.model;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Class for a Term.
 *
 * <p> This class defines a Term at a school for a student. It contains information on the title,
 * start date, end date, and a list of associated courses for that student's term. </p>
 */
@Entity(tableName = "term_table")
public class Term {

    @PrimaryKey(autoGenerate = true)
    private int id;

    private String title;

    @ColumnInfo(name = "start_date")
    private LocalDate startDate;

    @ColumnInfo(name = "end_date")
    private LocalDate endDate;

    /**
     * Default constructor for Term.
     */
    public Term() {
    }

    /**
     * Constructor for Term.
     *
     * @param title The title of the term
     * @param startDate The start date of the term
     * @param endDate The end date of the term
     */
    public Term(String title, LocalDate startDate, LocalDate endDate) {
        this.title = title;
        this.startDate = startDate;
        this.endDate = endDate;
    }

    /**
     * Constructor for Term.
     *
     * @param id The id of the term. Cannot be null.
     * @param title The title of the term
     * @param startDate The start date of the term
     * @param endDate The end date of the term
     */
    public Term(@NonNull int id, String title, LocalDate startDate, LocalDate endDate) {
        this.id = id;
        this.title = title;
        this.startDate = startDate;
        this.endDate = endDate;
    }

    /**
     * Getter for ID.
     *
     * <p> This is the getter for the ID of a term. An ID is autogenerated by the database. </p>
     * @return The ID of the term
     */
    public int getId() {
        return id;
    }


    /**
     * Setter for ID.
     *
     * <p> This is the setter for the ID of a term. An ID is autogenerated by the database. </p>
     * @param id The ID the term will have
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for title.
     *
     * <p> This is the getter for the title of a term. </p>
     * @return The title of the term
     */
    public String getTitle() {
        return title;
    }

    /**
     * Setter for title.
     *
     * <p> This is the setter for the title of a term. </p>
     * @param title The title the term will have
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for the start date.
     *
     * <p> This is the getter for the start date of a term. </p>
     * @return The start date of the term
     */
    public LocalDate getStartDate() {
        return startDate;
    }

    /**
     * Setter for the start date.
     *
     * <p> This is the setter for the start date of a term. </p>
     * @param startDate The start date the term will have
     */
    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    /**
     * Getter for the end date.
     *
     * <p> This is the getter for the end date of a term. </p>
     * @return The end date of the term
     */
    public LocalDate getEndDate() {
        return endDate;
    }

    /**
     * Setter for the end date.
     *
     * <p> This is the setter for the end date of a term. </p>
     * @param endDate The end date the term will have
     */
    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    /**
     * Overrides the toString() method.
     *
     * @return A formatted String containing the term's title
     */
    @Override
    public String toString() {
        return title;
    }

    @Override
    public boolean equals(@Nullable Object obj) {
        if (obj instanceof Term)
            return (id == ((Term) obj).getId());
        else
            return false;
    }
}
